{"version":3,"file":"static/js/314.f12558bf.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,6BACzB,IAAMC,EAAU,mCAEVC,EAAW,mCAAG,oGACOF,EAAAA,EAAAA,IAAA,uCAA0CC,IADjD,cACVE,EADU,yBAETA,EAASC,KAAKC,SAFL,2CAAH,qDAKXC,EAAc,mCAAG,WAAMC,GAAN,uFACEP,EAAAA,EAAAA,IAAA,mBAAsBO,EAAtB,oBAAyCN,IAD3C,cACfE,EADe,yBAEdA,EAASC,MAFK,2CAAH,sDAKdI,EAAc,mCAAG,WAAMD,GAAN,uFACEP,EAAAA,EAAAA,IAAA,mBAAsBO,EAAtB,4BAAiDN,IADnD,cACfE,EADe,yBAEdA,EAASC,KAAKK,MAFA,2CAAH,sDAKdC,EAAiB,mCAAG,WAAMH,GAAN,uFACDP,EAAAA,EAAAA,IAAA,mBAAsBO,EAAtB,4BAAiDN,IADhD,cAClBE,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,sDAKjBM,EAAgB,mCAAG,WAAMC,GAAN,uFACEZ,EAAAA,EAAAA,IAAA,gCAAmCY,EAAnC,oBAAoDX,IADtD,cACfE,EADe,yBAEdA,EAASC,KAAKC,SAFA,2CAAH,qD,8ICAtB,EAtBqB,SAAC,GAAsB,IAAD,IAAnBQ,EAAmB,EAAnBA,aACZC,EAAuDD,EAAvDC,MAAOC,EAAgDF,EAAhDE,SAAUC,EAAsCH,EAAtCG,YAAaC,EAAyBJ,EAAzBI,aAAcC,EAAWL,EAAXK,OAE7CC,GAAWC,EAAAA,EAAAA,MACfC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAExD,OACI,4BACI,SAAC,KAAD,CAAMC,GAAIJ,EAAoBK,QAA9B,SAAuC,aACvC,gBAAKC,IAAG,0CAAqCX,GAAeY,IAAKd,KACjE,wBAAKA,KACL,yBAAG,eAAae,KAAKC,MAAqB,IAAfb,GAAsB,QACjD,wBAAI,cACJ,uBAAIF,KACJ,2BACI,wBAAI,aACFG,EAAOa,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,KAAN,OACT,0BAAa,IAAEA,IAAND,EADA,SAK5B,E,kBC2BD,EA7CyB,WACrB,IAAQzB,GAAY2B,EAAAA,EAAAA,MAAZ3B,QACR,GAAwC4B,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOtB,EAAP,KAAqBuB,EAArB,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KA0BA,OAxBJC,EAAAA,EAAAA,YAAU,WAAM,wCAKZ,8GAGoBjC,EAAAA,EAAAA,IAAeC,GAHnC,QAGMiC,EAHN,QAKcR,KACNM,GAAW,GACXF,EAAgBI,IAPxB,gDAWAC,QAAQC,IAAR,MAXA,0DALY,sBACPnC,GADO,mCAoBZoC,EACH,GAAE,CAACpC,IAIJ8B,GAAW,SAACO,EAAA,EAAD,KACF,4BACG,SAAC,EAAD,CAAc/B,aAAcA,KAC5B,2BACI,yBAAI,SAAC,KAAD,CAAMY,GAAG,OAAT,SAAgB,YACpB,0BAAI,KAAC,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,mBAG7B,SAAC,EAAAoB,SAAD,CAAUC,UAAU,SAACF,EAAA,EAAD,IAApB,UACK,SAAC,KAAD,QAIf,C","sources":["api.js","components/MovieDetails.jsx","pages/MovieDetailsPage.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org'\nconst API_KEY = 'da0b91f90e02f4caf38d6a44980d2829'\n\nconst fetchMovies = async () => {\n    const response = await axios.get(`3/trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n}\n\nconst fetchMovieById = async movieId => {\n  const response = await axios.get(`/3/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nconst fetchMovieCast = async movieId => {\n  const response = await axios.get(`/3/movie/${movieId}/credits?api_key=${API_KEY}`);\n  return response.data.cast;\n}\n\nconst fetchMovieReviews = async movieId => {\n  const response = await axios.get(`/3/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nconst fetchMovieSearch = async query => {\n    const response = await axios.get(`/3/search/movie?query=${query}&api_key=${API_KEY}`)\n    return response.data.results;\n};\n\nexport {fetchMovies, fetchMovieById, fetchMovieCast, fetchMovieReviews, fetchMovieSearch}","import { Link, useLocation } from \"react-router-dom\";\nimport { useRef } from \"react\";\n\nconst MovieDetails = ({ movieDetails }) => {\n    const { title, overview, poster_path, vote_average, genres } = movieDetails;\n\n     const location = useLocation();\n const backLinkLocationRef = useRef(location.state?.from ?? '/');\n    \n    return (\n        <div>\n            <Link to={backLinkLocationRef.current}>Go back</Link>\n            <img src={`https://image.tmdb.org/t/p/w500/${poster_path}`} alt={title} />\n            <h2>{title}</h2>\n            <p>User score: {Math.round(vote_average * 100) / 100}</p>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n            <ul>\n                <h3>Genres: </h3>\n                { genres.map(({id, name}) => \n                    <li key={id}> {name}</li>\n            )}</ul>\n       </div>\n    )\n}\nexport default MovieDetails","import MovieDetails from \"components/MovieDetails\";\nimport { useState, useEffect, Suspense } from \"react\";\nimport { Outlet, useParams, Link } from \"react-router-dom\";\nimport { fetchMovieById } from \"api\";\nimport { Loader } from \"components/Loader\";\n\nconst MovieDetailsPage = () => {\n    const { movieId } = useParams();\n    const [movieDetails, setMovieDetails] = useState({});\n    const [loading, setLoading] = useState(true);\n\nuseEffect(() => {\n    if (!movieId) {\n        return\n    }\n\n    async function getMoviesById() {\n        try {\n           \n    const movie = await fetchMovieById(movieId);\n            \n        if (movie.id) {\n            setLoading(false);\n            setMovieDetails(movie);\n            }\n        \n} catch (error) {\n    console.log(error)\n}        \n    }\n    \n    getMoviesById();\n}, [movieId])\n\n\n    return (\nloading ? (<Loader/>) : \n       ( <div>\n            <MovieDetails movieDetails={movieDetails} />\n            <ul>\n                <li><Link to=\"cast\">Cast</Link></li>\n                <li> <Link to=\"reviews\">Reviews</Link></li>\n            </ul>\n\n           <Suspense fallback={<Loader/>}>\n                <Outlet/>\n                </Suspense>\n        </div>)\n    )\n}\n\nexport default MovieDetailsPage;"],"names":["axios","API_KEY","fetchMovies","response","data","results","fetchMovieById","movieId","fetchMovieCast","cast","fetchMovieReviews","fetchMovieSearch","query","movieDetails","title","overview","poster_path","vote_average","genres","location","useLocation","backLinkLocationRef","useRef","state","from","to","current","src","alt","Math","round","map","id","name","useParams","useState","setMovieDetails","loading","setLoading","useEffect","movie","console","log","getMoviesById","Loader","Suspense","fallback"],"sourceRoot":""}