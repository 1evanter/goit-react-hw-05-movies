{"version":3,"file":"static/js/98.9aaef180.chunk.js","mappings":"8SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,6BACzB,IAAMC,EAAU,mCAEVC,EAAW,mCAAG,oGACOF,EAAAA,EAAAA,IAAA,uCAA0CC,IADjD,cACVE,EADU,yBAETA,EAASC,KAAKC,SAFL,2CAAH,qDAKXC,EAAc,mCAAG,WAAMC,GAAN,uFACEP,EAAAA,EAAAA,IAAA,mBAAsBO,EAAtB,oBAAyCN,IAD3C,cACfE,EADe,yBAEdA,EAASC,MAFK,2CAAH,sDAKdI,EAAc,mCAAG,WAAMD,GAAN,uFACEP,EAAAA,EAAAA,IAAA,mBAAsBO,EAAtB,4BAAiDN,IADnD,cACfE,EADe,yBAEdA,EAASC,KAAKK,MAFA,2CAAH,sDAKdC,EAAiB,mCAAG,WAAMH,GAAN,uFACDP,EAAAA,EAAAA,IAAA,mBAAsBO,EAAtB,4BAAiDN,IADhD,cAClBE,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,sDAKjBM,EAAgB,mCAAG,WAAMC,GAAN,uFACEZ,EAAAA,EAAAA,IAAA,gCAAmCY,EAAnC,oBAAoDX,IADtD,cACfE,EADe,yBAEdA,EAASC,KAAKC,SAFA,2CAAH,qD,sJCJtB,EAlBuB,SAAC,GAAgB,IAAdQ,EAAa,EAAbA,OACfC,GAAWC,EAAAA,EAAAA,MAElB,OACI,wBAEQF,EAAOG,KAAI,YAAkB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,MACb,OACI,yBACI,SAAC,KAAD,CAAMC,GAAE,iBAAYF,GAAMG,MAAO,CAAEC,KAAMP,GAAzC,SAAsDI,KADjDD,EAIhB,KAIhB,E,SCgBD,EA9BiB,WACb,OAA4CK,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAoBA,OAjBAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,oGAEQD,GAAW,GAFnB,UAG6BxB,EAAAA,EAAAA,MAH7B,OAGcW,EAHd,OAIQW,EAAkBX,GAJ1B,gDAMQe,QAAQC,IAAR,MANR,yBASSH,GAAW,GATpB,6EADY,uBAAC,WAAD,wBAcZI,EACH,GAAE,IAIKL,GACF,SAACM,EAAA,EAAD,KACC,SAAC,EAAD,CAAgBlB,OAAQU,GAE9B,C","sources":["api.js","components/TrendingMovies.jsx","pages/HomePage.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org'\nconst API_KEY = 'da0b91f90e02f4caf38d6a44980d2829'\n\nconst fetchMovies = async () => {\n    const response = await axios.get(`3/trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n}\n\nconst fetchMovieById = async movieId => {\n  const response = await axios.get(`/3/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nconst fetchMovieCast = async movieId => {\n  const response = await axios.get(`/3/movie/${movieId}/credits?api_key=${API_KEY}`);\n  return response.data.cast;\n}\n\nconst fetchMovieReviews = async movieId => {\n  const response = await axios.get(`/3/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nconst fetchMovieSearch = async query => {\n    const response = await axios.get(`/3/search/movie?query=${query}&api_key=${API_KEY}`)\n    return response.data.results;\n};\n\nexport {fetchMovies, fetchMovieById, fetchMovieCast, fetchMovieReviews, fetchMovieSearch}","import { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\n\nconst TrendingMovies = ({ movies }) => {\n     const location = useLocation();\n\n    return (\n        <ul>\n            {\n                movies.map(({id, title}) => {\n                    return (\n                        <li key={id}>\n                            <Link to={`movies/${id}`} state={{ from: location }}>{title}</Link>\n                        </li>\n                    )\n                })\n            }\n    </ul>\n)\n}\n\nexport default TrendingMovies;","import { useState, useEffect } from \"react\";\nimport { fetchMovies } from \"api\";\nimport TrendingMovies from \"components/TrendingMovies\";\nimport { Loader } from \"components/Loader\";\n\nconst HomePage = () => {\n    const [trendingMovies, setTrendingMovies] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n\n    useEffect(() => {\n        async function getTrendingMovies() {\n            try {\n                setLoading(true);\n                const movies = await fetchMovies();\n                setTrendingMovies(movies);\n            } catch (error) {\n                console.log(error)\n            }\n         finally {\n                 setLoading(false);\n            }\n        }\n    \n        getTrendingMovies();\n    }, []);\n\n    return (\n        \n            loading ? (\n          <Loader/>\n      ) : (<TrendingMovies movies={trendingMovies} />)   \n    )\n    }\n\nexport default HomePage;"],"names":["axios","API_KEY","fetchMovies","response","data","results","fetchMovieById","movieId","fetchMovieCast","cast","fetchMovieReviews","fetchMovieSearch","query","movies","location","useLocation","map","id","title","to","state","from","useState","trendingMovies","setTrendingMovies","loading","setLoading","useEffect","console","log","getTrendingMovies","Loader"],"sourceRoot":""}