{"version":3,"file":"static/js/597.bb130b65.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,6BACzB,IAAMC,EAAU,mCAEVC,EAAW,mCAAG,oGACOF,EAAAA,EAAAA,IAAA,uCAA0CC,IADjD,cACVE,EADU,yBAETA,EAASC,KAAKC,SAFL,2CAAH,qDAKXC,EAAc,mCAAG,WAAMC,GAAN,uFACEP,EAAAA,EAAAA,IAAA,mBAAsBO,EAAtB,oBAAyCN,IAD3C,cACfE,EADe,yBAEdA,EAASC,MAFK,2CAAH,sDAKdI,EAAc,mCAAG,WAAMD,GAAN,uFACEP,EAAAA,EAAAA,IAAA,mBAAsBO,EAAtB,4BAAiDN,IADnD,cACfE,EADe,yBAEdA,EAASC,KAAKK,MAFA,2CAAH,sDAKdC,EAAiB,mCAAG,WAAMH,GAAN,uFACDP,EAAAA,EAAAA,IAAA,mBAAsBO,EAAtB,4BAAiDN,IADhD,cAClBE,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,sDAKjBM,EAAgB,mCAAG,WAAMC,GAAN,uFACEZ,EAAAA,EAAAA,IAAA,gCAAmCY,EAAnC,oBAAoDX,IADtD,cACfE,EADe,yBAEdA,EAASC,KAAKC,SAFA,2CAAH,qD,yGCuBtB,UA5Ca,WAET,IAAQE,GAAYM,EAAAA,EAAAA,MAAZN,QACR,GAAwBO,EAAAA,EAAAA,UAAS,IAAjC,eAAOL,EAAP,KAAaM,EAAb,KAsBA,OApBJC,EAAAA,EAAAA,YAAU,WAAM,wCAKZ,8GAEgCR,EAAAA,EAAAA,IAAeD,GAF/C,OAEcU,EAFd,OAIaF,EAAQE,GAJrB,gDAQIC,QAAQC,IAAR,MARJ,0DALY,sBACPZ,GADO,mCAgBZa,EACH,GAAE,CAAEb,KAIG,0BACI,2BACI,wBAAI,SACHE,EAAKY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OAA4C,0BACjDD,GAAgB,gBAAKE,IAAG,0CAAqCF,GAAgBG,IAAKJ,KAAa,yBAAK,wGAErG,4BACI,uBAAIA,KACJ,yBAAG,cAAYE,UALwCH,EAArD,QAazB,C","sources":["api.js","components/Cast.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org'\nconst API_KEY = 'da0b91f90e02f4caf38d6a44980d2829'\n\nconst fetchMovies = async () => {\n    const response = await axios.get(`3/trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n}\n\nconst fetchMovieById = async movieId => {\n  const response = await axios.get(`/3/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nconst fetchMovieCast = async movieId => {\n  const response = await axios.get(`/3/movie/${movieId}/credits?api_key=${API_KEY}`);\n  return response.data.cast;\n}\n\nconst fetchMovieReviews = async movieId => {\n  const response = await axios.get(`/3/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nconst fetchMovieSearch = async query => {\n    const response = await axios.get(`/3/search/movie?query=${query}&api_key=${API_KEY}`)\n    return response.data.results;\n};\n\nexport {fetchMovies, fetchMovieById, fetchMovieCast, fetchMovieReviews, fetchMovieSearch}","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\"\nimport { fetchMovieCast } from \"api\";\n\nconst Cast = () => {\n\n    const { movieId } = useParams();\n    const [cast, setCast] = useState([])\n\nuseEffect(() => {\n    if (!movieId) {\n     return\n    }\n    \n    async function getMovieCast() {\n        try {\n            const movieCast = await fetchMovieCast(movieId);\n    \n                 setCast(movieCast);\n          \n       \n    } catch (error) {\n        console.log(error)\n    }\n    }\n    getMovieCast();\n}, [ movieId])\n\n\n    return (\n        <div>\n            <ul>\n                <h4>Cast</h4>\n                {cast.map(({ id, name, profile_path, character }) => (<li key={id}>\n                    {profile_path ? (<img src={`https://image.tmdb.org/t/p/w500/${profile_path}`} alt={name} />) : (<div>ААААААА ФОТКИ НЕМА</div>)}\n                    \n                    <div>\n                        <p>{name}</p>\n                        <p>Character: {character}</p>\n                    </div>\n                    </li>)\n                \n                )}\n            </ul>\n        </div>\n    )\n}\n\nexport default Cast"],"names":["axios","API_KEY","fetchMovies","response","data","results","fetchMovieById","movieId","fetchMovieCast","cast","fetchMovieReviews","fetchMovieSearch","query","useParams","useState","setCast","useEffect","movieCast","console","log","getMovieCast","map","id","name","profile_path","character","src","alt"],"sourceRoot":""}