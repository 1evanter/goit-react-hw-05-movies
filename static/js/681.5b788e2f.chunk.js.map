{"version":3,"file":"static/js/681.5b788e2f.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,6BACzB,IAAMC,EAAU,mCAEVC,EAAW,mCAAG,oGACOF,EAAAA,EAAAA,IAAA,uCAA0CC,IADjD,cACVE,EADU,yBAETA,EAASC,KAAKC,SAFL,2CAAH,qDAKXC,EAAc,mCAAG,WAAMC,GAAN,uFACEP,EAAAA,EAAAA,IAAA,mBAAsBO,EAAtB,oBAAyCN,IAD3C,cACfE,EADe,yBAEdA,EAASC,MAFK,2CAAH,sDAKdI,EAAc,mCAAG,WAAMD,GAAN,uFACEP,EAAAA,EAAAA,IAAA,mBAAsBO,EAAtB,4BAAiDN,IADnD,cACfE,EADe,yBAEdA,EAASC,KAAKK,MAFA,2CAAH,sDAKdC,EAAiB,mCAAG,WAAMH,GAAN,uFACDP,EAAAA,EAAAA,IAAA,mBAAsBO,EAAtB,4BAAiDN,IADhD,cAClBE,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,sDAKjBM,EAAgB,mCAAG,WAAMC,GAAN,uFACEZ,EAAAA,EAAAA,IAAA,gCAAmCY,EAAnC,oBAAoDX,IADtD,cACfE,EADe,yBAEdA,EAASC,KAAKC,SAFA,2CAAH,qD,yGCgBtB,UArCgB,WACZ,IAAQE,GAAYM,EAAAA,EAAAA,MAAZN,QACR,GAA8BO,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAkBA,OAhBJC,EAAAA,EAAAA,YAAU,WAAM,wCAEZ,8GAE+BP,EAAAA,EAAAA,IAAkBH,GAFjD,QAEUW,EAFV,QAGqBC,QACbH,EAAWE,GAJnB,gDAOIE,QAAQC,IAAR,MAPJ,0DAFY,uBAAC,WAAD,wBAaZC,EACH,GAAE,CAACf,IAGIQ,EAAQI,OAAS,GACb,0BACI,2BACI,wBAAI,YACHJ,EAAQQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACT,2BACI,yBAAG,WAASD,MACZ,uBAAIC,MAFCF,EADA,UAQrB,yBAAK,+CAEhB,C","sources":["api.js","components/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org'\nconst API_KEY = 'da0b91f90e02f4caf38d6a44980d2829'\n\nconst fetchMovies = async () => {\n    const response = await axios.get(`3/trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n}\n\nconst fetchMovieById = async movieId => {\n  const response = await axios.get(`/3/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nconst fetchMovieCast = async movieId => {\n  const response = await axios.get(`/3/movie/${movieId}/credits?api_key=${API_KEY}`);\n  return response.data.cast;\n}\n\nconst fetchMovieReviews = async movieId => {\n  const response = await axios.get(`/3/movie/${movieId}/reviews?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nconst fetchMovieSearch = async query => {\n    const response = await axios.get(`/3/search/movie?query=${query}&api_key=${API_KEY}`)\n    return response.data.results;\n};\n\nexport {fetchMovies, fetchMovieById, fetchMovieCast, fetchMovieReviews, fetchMovieSearch}","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\"\nimport { fetchMovieReviews } from \"api\";\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([])\n\nuseEffect(() => {\n\n    async function getMovieReviews() {\n    try {\n        const movieReviews = await fetchMovieReviews(movieId);\n        if (movieReviews.length) {\n            setReviews(movieReviews);\n    }\n    } catch (error) {\n        console.log(error)\n        }\n    }\n    \n    getMovieReviews();\n}, [movieId])\n\n    return (\n        reviews.length > 0 ? (\n            <div>\n                <ul> \n                    <h4>Reviews</h4>\n                    {reviews.map(({ id, author, content }) => (\n                        <li key={id}>\n                            <p>Author: {author}</p>\n                            <p>{content}</p>\n                        </li>\n                    ))}\n                </ul>\n          </div>  \n       ) : (<div>We don't have any reviews for this movie...</div>)\n    )\n}\n\nexport default Reviews"],"names":["axios","API_KEY","fetchMovies","response","data","results","fetchMovieById","movieId","fetchMovieCast","cast","fetchMovieReviews","fetchMovieSearch","query","useParams","useState","reviews","setReviews","useEffect","movieReviews","length","console","log","getMovieReviews","map","id","author","content"],"sourceRoot":""}